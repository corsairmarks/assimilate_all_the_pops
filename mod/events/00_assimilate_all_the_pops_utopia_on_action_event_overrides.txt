namespace = utopia

# Modified:
# * allow psionic Pops to gain cybernetic
# * cybernetic traits now handled by Leader Traits: All Eligible Species Traits
# * do not (re)set the dominant species if it is robotic
country_event = {
	id = utopia.2501
	title = utopia.2501.name
	desc = utopia.2501.desc
	picture = GFX_evt_cybernetics
	show_sound = event_the_flesh_is_weak
	is_triggered_only = yes
	immediate = {
		set_country_flag = cyborg_empire
		if = {
			limit = {
				owner_species = {
					NOT = { has_trait = trait_cybernetic }
					is_robotic = no
					count_species_pop = {
						count > 0
						limit = { is_owned_by = root }
					}
				}
			}
			owner_species = { save_event_target_as = previous_owner_species }
		}
		else = {
			random_owned_pop_species = {
				limit = {
					is_same_species = root.owner_species
					NOT = { has_trait = trait_cybernetic }
					is_robotic = no
				}
				save_event_target_as = previous_owner_species
			}
		}
		# previous owner species has special handling in case the owner_species was changed within a game-day or so,
		# meaning the species caches haven't refreshed, which can lead to things like not properly applying both psionic and cybernetic traits to the same species
		event_target:previous_owner_species = {
			prepare_cyborg_species = yes
			aatp_convert_species = yes
			event_target:prepared_species = { save_event_target_as = cybernetic_species }
		}
		every_owned_pop_species = {
			limit = {
				NOR = {
					is_exact_same_species = event_target:previous_owner_species
					has_trait = trait_cybernetic
				}
				is_robotic = no
			}
			prepare_cyborg_species = yes
			aatp_convert_species = yes
		}
		# catches colony ships/armies/leaders whose species the owner does not have any Pops
		every_controlled_ship = {
			limit = {
				is_ship_class = shipclass_colonizer
				exists = species
				species = {
					NOT = { has_trait = trait_cybernetic }
					is_robotic = no
				}
			}
			species = { prepare_cyborg_species = yes }
			change_species = event_target:prepared_species
		}
		every_owned_army = {
			limit = {
				exists = species
				species = {
					NOT = { has_trait = trait_cybernetic }
					is_robotic = no
				}
			}
			species = { prepare_cyborg_species = yes }
			change_species = event_target:prepared_species
		}
		every_owned_leader = {
			limit = {
				species = {
					NOT = { has_trait = trait_cybernetic }
					is_robotic = no
				}
			}
			save_event_target_as = previous_leader_species
			prepare_cyborg_species = yes
			change_species = event_target:prepared_species
			fire_on_action = {
				on_action = on_leader_species_changed
				scopes = {
					from = event_target:previous_leader_species
				}
			}
		}
		every_pool_leader = {
			limit = {
				species = {
					NOT = { has_trait = trait_cybernetic }
					is_robotic = no
				}
			}
			save_event_target_as = previous_leader_species
			prepare_cyborg_species = yes
			change_species = event_target:prepared_species
			fire_on_action = {
				on_action = on_leader_species_changed
				scopes = {
					from = event_target:previous_leader_species
				}
			}
		}
		every_envoy = {
			limit = {
				species = {
					NOT = { has_trait = trait_cybernetic }
					is_robotic = no
				}
			}
			save_event_target_as = previous_leader_species
			prepare_cyborg_species = yes
			change_species = event_target:prepared_species
			fire_on_action = {
				on_action = on_leader_species_changed
				scopes = {
					from = event_target:previous_leader_species
				}
			}
		}
		if = {
			limit = {
				exists = event_target:cybernetic_species
				owner_species = { is_robotic = no }
			}
			change_dominant_species = { species = event_target:cybernetic_species }
		}
		# note: cybernetic leader traits are added by Leader Traits: All Eligible Species Traits

		observer_event = {
			id = observer.55
		}
		if = {
			limit = { is_primitive = no }
			every_country = {
				limit = {
					is_ai = no
					NOT = { is_same_value = root }
					has_communications = root
				}
				country_event = {
					id = utopia.2505
					days = 5
				}
			}
		}
		if = {
			limit = {
				any_planet_within_border = {
					has_planet_flag = fotd_seperatist_planet@root
					owner = { has_country_flag = fotd_seperatist_country@root }
				}
			}
			country_event = {
				id = origin.6095
				days = 5
				random = 2
			}
		}
	}
	option = {
		name = utopia.2501.a
	}
}

# Modified:
# * do no convert already-existing synthetics into the changed species
# * do not convert species to synthetics if they already have other ascension-related traits (players can choose to manually set them to assimilate if desired)
# * fire the Organic Zealots "we hate you now and sever diplomatic ties" event regardless of whether the target country is an AI player, if Civic: Organic Zealots is active
country_event = {
	id = utopia.2551
	title = utopia.2551.name
	desc = utopia.2551.desc
	picture = GFX_evt_robot_assembly_plant
	show_sound = event_synthetic_evolution
	is_triggered_only = yes
	immediate = {
		set_country_flag = synthetic_empire
		if = {
			limit = { has_policy_flag = robots_outlawed }
			set_policy = {
				policy = robot_pop_policy
				option = robot_pops_allowed
				cooldown = yes
			}
		}
		if = {
			limit = {
				OR = {
					has_policy_flag = ai_servitude
					has_policy_flag = ai_outlawed
				}
			}
			set_policy = {
				policy = artificial_intelligence_policy
				option = ai_full_rights
				cooldown = yes
			}
		}
		if = {
			limit = {
				OR = {
					is_active_resolution = resolution_divinity_silence_the_soulless
					is_active_resolution = resolution_divinity_a_defined_purpose
				}
			}
			owner = {
				set_timed_country_flag = {
					flag = resolution_breached_synthetic_evolution
					days = 3600
				}
			}
		}

		give_technology = {
			tech = tech_bio_reactor
			message = no
		}

		create_species = {
			is_mod = yes
			name = this
			namelist = this
			plural = this
			class = ROBOT
			homeworld = root.species
			portrait = default_robot
			traits = {
				trait = trait_mechanical
			}
			effect = {
				if = { limit = { has_synthethic_dawn = yes }
					prev = {
						switch = {
							trigger = is_species_class
							HUM = { prev = { change_species_characteristics = { portrait = "sd_hum_robot" } } }
							MAM = { prev = { change_species_characteristics = { portrait = "sd_mam_robot" } } }
							REP = { prev = { change_species_characteristics = { portrait = "sd_rep_robot" } } }
							AVI = { prev = { change_species_characteristics = { portrait = "sd_avi_robot" } } }
							ART = { prev = { change_species_characteristics = { portrait = "sd_art_robot" } } }
							MOL = { prev = { change_species_characteristics = { portrait = "sd_mol_robot" } } }
							FUN = { prev = { change_species_characteristics = { portrait = "sd_fun_robot" } } }
							PLANT = { prev = { change_species_characteristics = { portrait = "sd_pla_robot" } } }
							LITHOID = { prev = { change_species_characteristics = { portrait = "lith_machine" } } }
							NECROID = { prev = { change_species_characteristics = { portrait = "nec_machine" } } }
							AQUATIC = { prev = { change_species_characteristics = { portrait = "aqu_machine" } } }
							TOX = { prev = { change_species_characteristics = { portrait = "tox_machine" } } }
						}
					}
				}
				rename_species = {
					prompt_country = root # If targeted country is a player they will get a popup asking for a name/plural/adjective combo. Otherwise the species will get a random name from the specified name_list
					name_list = ascension_list
				}
				save_event_target_as = new_robotic_species
			}
		}
		owner_species = { swap_species_traits_organic_to_robotic = yes }
		every_owned_pop = {
			limit = {
				is_being_purged = no
				species = {
					has_any_ascension_species_traits = no
					is_robotic = no
					is_livestock = no
				}
			}
			change_species = event_target:new_robotic_species
		}
		every_controlled_ship = {
			limit = {
				is_ship_class = shipclass_colonizer
				species = {
					has_any_ascension_species_traits = no
					is_robotic = no
					is_livestock = no
				}
			}
			change_species = event_target:new_robotic_species
		}
		every_owned_army = {
			limit = {
				exists = species
				species = {
					has_any_ascension_species_traits = no
					is_robotic = no
					is_livestock = no
				}
				army_type = assault_army
			}
			modify_army = {
				name = random
				type = robotic_army
				species = event_target:new_robotic_species
			}
		}
		every_owned_army = {
			limit = {
				exists = species
				species = {
					has_any_ascension_species_traits = no
					is_robotic = no
					is_livestock = no
				}
				army_type = defense_army
			}
			modify_army = {
				name = random
				type = robotic_defense_army
				species = event_target:new_robotic_species
			}
		}
		every_owned_leader = {
			limit = {
				species = {
					has_any_ascension_species_traits = no
					is_robotic = no
					is_livestock = no
				}
			}
			save_event_target_as = previous_leader_species
			change_species = event_target:new_robotic_species
			fire_on_action = {
				on_action = on_leader_species_changed
				scopes = {
					from = event_target:previous_leader_species
				}
			}
		}
		every_pool_leader = {
			limit = {
				species = {
					has_any_ascension_species_traits = no
					is_robotic = no
					is_livestock = no
				}
			}
			save_event_target_as = previous_leader_species
			change_species = event_target:new_robotic_species
			fire_on_action = {
				on_action = on_leader_species_changed
				scopes = {
					from = event_target:previous_leader_species
				}
			}
		}
		every_envoy = {
			limit = {
				species = {
					has_any_ascension_species_traits = no
					is_robotic = no
					is_livestock = no
				}
			}
			save_event_target_as = previous_leader_species
			change_species = event_target:new_robotic_species
			fire_on_action = {
				on_action = on_leader_species_changed
				scopes = {
					from = event_target:previous_leader_species
				}
			}
		}
		change_dominant_species = { species = event_target:new_robotic_species }
		# note: cybernetic leader traits are added by Leader Traits: All Eligible Species Traits

		observer_event = {
			id = observer.4
		}
		every_country = {
			limit = {
				NOT = { is_same_value = root }
				has_communications = root
			}
			if = {
				limit = { is_ai = no }
				country_event = {
					id = utopia.2555
					days = 5
				}
				country_event = {
					id = utopia.2556
					days = 10
				}
			}
			if = {
				limit = { has_civic_organic_zealots_active = yes }
				country_event = {
					id = civic_organic_zealots.2554
					days = 5
				}
			}
		}
		if = {
			limit = {
				any_country = {
					is_fallen_empire_spiritualist = yes
					has_communications = root
					NOT = { is_same_value = root }
				}
			}
			random_country = {
				limit = {
					is_fallen_empire_spiritualist = yes
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = {
					id = utopia.2557
					days = 15
				}
			}
		}
		else = {
			random_country = {
				limit = {
					is_country_type = default
					has_ethic = ethic_fanatic_spiritualist
					has_communications = root
					NOT = { is_same_value = root }
				}
				country_event = {
					id = utopia.2557
					days = 15
				}
			}
		}

		set_country_flag = synth_assimilation
		if = {
			limit = {
				any_planet_within_border = {
					has_planet_flag = fotd_seperatist_planet@root
					owner = { has_country_flag = fotd_seperatist_country@root }
				}
			}
			country_event = {
				id = origin.6095
				days = 5
				random = 2
			}
		}
	}
	option = {
		trigger = { is_homicidal = no }
		name = utopia.2551.a
		custom_tooltip = SYNTH_ASSIMILATION_CITIZENSHIP_ENABLED
	}
	option = {
		trigger = { is_homicidal = yes }
		name = utopia.2551.a
	}
}